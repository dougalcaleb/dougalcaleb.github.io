@use "ext";

.choose-panel {
	padding-top: 10px;
}

.panel-image-tools {
	display: none;

	.brush-btn {
		svg {
			height: 20px;
			width: 20px;
			color: ext.$theme-white;
		}
	}
}

.controls {
	width: max(20vw, 240px);
	height: calc(100vh - max(50px, 5vh));
	position: absolute;
	left: 0;
	top: max(50px, 5vh);
	background: ext.$theme-black-light;
	box-shadow: 5px 0px 10px black;
	z-index: 2;
	overflow-y: auto;
	padding-bottom: 50px;
	box-sizing: border-box;
	.control {
		width: 90%;
		transition: 0.2s;
		position: relative;
		margin: auto;
		overflow: hidden;
		p {
			font-family: ext.$theme-font-subtitle;
			color: ext.$theme-white;
			font-size: 12px;
			margin-bottom: 15px;
			margin-top: 35px;
		}
	}
	.control-palettes {
		.active-palette {
			margin-top: 30px;
			.palette-colors {
				border: 3px solid ext.$theme-blue-light;
				box-sizing: border-box;
				border-radius: 3px;
			}
		}
		.active-palette::after {
			content: "ACTIVE:";
			font-family: ext.$theme-font-paragraph;
			color: ext.$theme-white;
			font-size: 10px;
			position: absolute;
			top: -15px;
		}
		.palette-add {
			width: 100%;
			height: 30px;
			position: relative;
			background: ext.$theme-black-medium;
			cursor: pointer;
			margin-bottom: 15px;
			&:hover {
				background: ext.$theme-gray;
			}
			svg {
				@extend %center;
				height: 20px;
				width: 20px;
				color: ext.$theme-blue-light;
			}
		}
		.palette {
			width: 100%;
			height: 30px;
			position: relative;
			margin-bottom: 15px;
			&:hover .palette-colors {
				width: calc(100% - 30px);
			}
			.palette-colors {
				width: 100%;
				height: 30px;
				display: flex;
				transition: 0.2s;
				position: relative;
				z-index: 2;
				.palette-color {
					flex: 1;
				}
			}
			.palette-options {
				height: 30px;
				background: ext.$theme-black-medium;
				right: 0;
				top: 0;
				z-index: 1;
				position: absolute;
				width: 30px;
				svg {
					height: 20px;
					width: 20px;
					color: ext.$theme-blue-light;
					@extend %center;
					cursor: pointer;
				}
			}
		}
	}
	.control-color {
		div {
			width: 100%;
			background: white;
			height: 30px;
			input {
				height: 30px;
				opacity: 0;
				width: 100%;
			}
		}
	}
	.control-file {
		button {
			position: relative;
			background: ext.$theme-black-medium;
			outline: none;
			border: none;
			color: ext.$theme-blue-light;
			font-family: ext.$theme-font-button;
			padding: 10px;
			padding-left: 20px;
			padding-right: 20px;
			cursor: pointer;
		}
		input {
			outline: none;
			font-family: ext.$theme-font-paragraph;
			opacity: 1;
			position: absolute;
			z-index: 5;
		}
	}
	.control-input-wrap {
		display: flex;
		justify-content: space-between;
		input {
			outline: none;
			border: none;
			font-family: ext.$theme-font-paragraph;
			width: 40%;
			padding: 10px;
			border-radius: 5px;
		}
	}
	.control-btn-wrap:not(.btn-wrap-no-bottom-margin) {
		margin-bottom: 15px;
	}
	.control-btn-wrap {
		display: flex;
		div {
			font-family: ext.$theme-font-button;
			color: ext.$theme-blue-light;
			cursor: pointer;
			flex: 1;
			text-align: center;
			position: relative;
			background: purple;
			line-height: 40px;
			height: 40px;
			background: ext.$theme-black-medium;
			z-index: 2;
			&:hover {
				background: ext.$theme-gray;
			}
			svg {
				@extend %center;
				height: 30px;
				width: 30px;
			}
			&.btn-active {
				background: ext.$theme-blue-light;
				color: ext.$theme-black-dark;
			}
		}
	}

	.control-toggle-wrap {
		display: flex;
		margin-bottom: 15px;
		text-wrap: wrap;
		div {
			font-family: ext.$theme-font-button;
			color: ext.$theme-blue-light;
			cursor: pointer;
			flex: 1;
			text-align: left;
			text-wrap: wrap;
			position: relative;
			line-height: 40px;
			height: 40px;
			z-index: 2;
			&::before {
				content: '';
				@extend %center-y;
				height: 30px;
				right: 5px;
				background: ext.$theme-black-dark;
				width: 50px;
				border-radius: 50px;
			}
			&::after {
				content: '';
				@extend %center-y;
				height: 22px;
				right: 28px;
				background: ext.$theme-gray;
				width: 22px;
				border-radius: 100%;
				transition: 0.2s;
			}
			svg {
				@extend %center;
				height: 30px;
				width: 30px;
			}
			&.btn-active {
				&::after {
					content: '';
					right: 10px;
					background: ext.$theme-blue-light;
				}
			}
		}
	}
}

.preview {
	width: calc(100vw - max(20vw, 240px));
	height: calc(100vh - max(50px, 5vh));
	position: absolute;
	right: 0;
	top: max(50px, 5vh);
	background: ext.$theme-black-medium;
	z-index: 1;
	.main-canvas {
		max-width: 90%;
		max-height: 90%;
		@extend %center;
	}
	#canvas-main {
		box-shadow: 0px 0px 20px black;
		background: ext.$theme-black-light;
	}
}

.edit-modal-bg {
	height: 100%;
	width: 100%;
	position: fixed;
	z-index: 99;
	background: rgba(0, 0, 0, 0.5);
	backdrop-filter: blur(3px);
	.edit-modal {
		height: 40vh;
		width: 40vw;
		background: ext.$theme-black-light;
		border-radius: 5px;
		@extend %center;
		box-shadow: 0px 0px 20px ext.$theme-black-dark;
		.modal-title {
			text-align: center;
			font-family: ext.$theme-font-title;
			color: ext.$theme-white;
		}
		.modal-btn-wrap {
			width: 100%;
			display: flex;
			justify-content: space-around;
			position: absolute;
			bottom: 15px;
			button {
				padding: 10px;
				padding-left: 25px;
				padding-right: 25px;
				font-family: ext.$theme-font-button;
				background: ext.$theme-black-medium;
				border: none;
				outline: none;
				color: ext.$theme-white;
				cursor: pointer;
				color: ext.$theme-blue-light;
				&:hover {
					background: ext.$theme-gray;
				}
			}
		}
		.modal-color-add {
			height: 40px;
			width: 40px;
			background: ext.$theme-black-medium;
			position: absolute;
			cursor: pointer;
			@extend %center-x;
			// top: 50px;
			bottom: 10vh;
			svg {
				height: 25px;
				width: 25px;
				@extend %center;
				color: ext.$theme-blue-light;
			}
		}
		.modal-colors-wrap {
			// background: orange;
			@extend %center-x;
			top: 13vh;
			height: 40px;
			// width: 40px;
			display: flex;
			justify-content: center;
			& > div {
				margin-left: 10px;
				margin-right: 10px;
			}
			.modal-color {
				// flex: 1;
				height: 40px;
				width: 40px;
				background: white;
				transition: width 0.2s;
				position: relative;
				&:hover {
					width: 60px;
					.modal-color-controls-top,
					.modal-color-controls-bottom {
						visibility: visible;
						opacity: 1;
					}
				}
				input {
					height: 40px;
					width: 100%;
					opacity: 0;
				}
				.modal-color-controls-top {
					width: 100%;
					height: 20px;
					position: absolute;
					top: -20px;
					// background: orange;
					visibility: hidden;
					opacity: 0;
					transition: 0.1s;
					display: flex;
					justify-content: space-between;
					align-items: center;
					svg {
						height: 20px;
						width: 20px;
						position: relative;
						color: ext.$theme-blue-light;
						cursor: pointer;
					}
				}
				.modal-color-controls-bottom {
					width: 100%;
					height: 25px;
					position: absolute;
					bottom: -25px;
					// background: orange;
					visibility: hidden;
					opacity: 0;
					transition: 0.1s;
					display: flex;
					justify-content: center;
					align-items: center;
					svg {
						height: 20px;
						width: 20px;
						position: relative;
						color: ext.$theme-blue-light;
						cursor: pointer;
					}
				}
			}
		}
	}
}

.loader-wrap {
	height: 100%;
	width: 100%;
	background: rgba(0,0,0,0.5);
	backdrop-filter: blur(3px);
	visibility: hidden;
	opacity: 0;
	transition: 0.1s;
	#loader {
		background: white;
		@extend %center;
		max-width: 50%;
	}
	#loader-title {
		@extend %center;
		color: ext.$theme-white;
		text-align: center;
		height: 10px;
		font-family: ext.$theme-font-title;
		text-shadow: 2px 2px 2px #272424;
		font-size: 30px;
		top: -250px;
	}
	#loader-progress {
		@extend %center;
		color: ext.$theme-white;
		text-align: center;
		height: 10px;
		font-family: ext.$theme-font-subtitle;
		text-shadow: 2px 2px 2px #272424;
		font-style: italic;
		bottom: -50px;
		span {
			margin-bottom: 10px;
			display: block;
		}
	}
}

@keyframes canvasAnim {
	0% {
		transform: translate(0px, 0px);
	}
	100% {
		transform: translate(-100px, 0px)
	}
}