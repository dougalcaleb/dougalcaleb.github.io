class RoundaboutScripter{constructor(){}onScroll(carousel,callback){carousel.subscribe("scroll",callback)}onScrollEnd(carousel,callback){carousel.subscribe("scrollEnd",callback)}onDragStart(carousel,callback){carousel.subscribe("dragStart",callback)}onDragEnd(carousel,callback){carousel.subscribe("dragEnd",callback)}onScrollNext(carousel,callback){carousel.subscribe("scrollNext",callback)}onScrollPrevious(carousel,callback){carousel.subscribe("scrollPrevious",callback)}onScrollNextEnd(carousel,callback){carousel.subscribe("scrollNextEnd",callback)}onScrollPreviousEnd(carousel,callback){carousel.subscribe("scrollPreviousEnd",callback)}scrollTo(carousel,pageId,transition=!0){carousel.scrollTo(pageId,!transition)}beforeDestroy(carousel,callback){carousel.subscribe("beforeDestroy",callback)}afterDestroy(carousel,callback){carousel.subscribe("afterDestroy",callback)}scrollNext(carousel,distance=-1,transition=!0){-1==distance?carousel.scroll(carousel.scrollBy,!transition):carousel.scroll(Math.abs(distance),!transition)}scrollPrevious(carousel,distance=-1,transition=!0){-1==distance?carousel.scroll(-carousel.scrollBy,!transition):carousel.scroll(-1*Math.abs(distance),!transition)}scroll(carousel,distance,transition=!0){carousel.scroll(distance,!transition)}throttledScroll(carousel,distance){carousel.scrollHandler(carousel,"script",distance)}removePage(carousel,pageId){carousel.pages.splice(pageId,1),carousel.destroy()}addPage(carousel,page,index=-1){-1==index?carousel.pages.push(page):carousel.pages.splice(index,0,page),carousel.destroy()}destroy(carousel,regenerate=!0,removeWrap=!1){carousel.destroy(regenerate,removeWrap)}addPageElement(carousel,pageId,element,replace=!1){replace?"object"==typeof element?(document.querySelector(`.roundabout-${carousel._uniqueId}-page-${pageId}`).innerHTML="",document.querySelector(`.roundabout-${carousel._uniqueId}-page-${pageId}`).appendChild(element)):"string"==typeof element&&(document.querySelector(`.roundabout-${carousel._uniqueId}-page-${pageId}`).innerHTML=element):"object"==typeof element?document.querySelector(`.roundabout-${carousel._uniqueId}-page-${pageId}`).appendChild(element):"string"==typeof element&&(document.querySelector(`.roundabout-${carousel._uniqueId}-page-${pageId}`).innerHTML+=element)}lazyLoad(carousel,pageIds,callback){"object"!=typeof pageIds?console.error("pageIds must be an array of integers"):(pageIds.forEach(id=>{carousel.subscribe("onLoad",{callback:callback,pageId:id})}),carousel._loadingPages?pageIds.forEach(id=>{carousel._loadQueue.push(id)}):carousel.load(pageIds))}setValue(carousel,setting,value){"_"==setting.split("")[0]?console.error(`The setting ${setting} cannot be overridden.`):carousel[setting]=value}}